
@font-face {
    font-family: Montresor; 
    src: url(../Fonts/Montresor.ttf); 
}

body {
    background: url(../images/main.jpg) center no-repeat;
    background-attachment: fixed;
    background-size: cover;
    font-family: 'Comic Sans MS', cursive;
}

.auth-background {
    background: url(../images/main.jpg) center no-repeat;
    background-size: cover;
}

#subLogo {
    margin-right: 1%; 
    float: left;
}

#subLogoSecond {
    margin-right: 1%; 
    float: left;
}

.btn-wrap-normal {
    white-space: normal;
}

.thumb img {
    -webkit-filter: grayscale(0);
    filter: none;
    border-radius: 5px;
    background-color: #fff;
    border: 1px solid #ddd;
    padding: 5px;
}

.thumb img:hover {
    -webkit-filter: grayscale(1);
    filter: grayscale(1);
}

.thumb {
    padding: 5px;
}

mark {
    background-color:  transparent;
}

/* + Preloader */

.loader {
    overflow: hidden; 
}

.loader .loader-inner {
    width: 260px;
    height: 260px; 
    background: #c7e2ed;
    border-radius: 100% 0 100% 0;
    padding: 15px;
    margin: 64px auto;
    box-sizing: border-box;
    position: relative;
    animation: loading-1 10s linear forwards infinite;
}

.loader .loader-inner:before{
    content: "";
    background: #fff;
    border-radius: 0 100% 0 100%;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
}

.loader .loader-inner > .loader-inner{
    width: 100%;
    height: 100%;
    margin: 0;
}
@keyframes loading-1{
    0%{ transform: rotate(0deg); }
    100%{ transform: rotate(360deg); }
}

#p_prldr{
    position: fixed;
    left: 0;
    top: 0;
    right:0;
    bottom:0;
    background: url(../images/main.jpg) center no-repeat;
    background-attachment: fixed;
    background-size: cover;
    z-index: 30;
}

/* - Preloader */

/* + Addititional menu */
  
  .drawer-list {
    position: fixed;
    right: 0;
    top: 0;
    height: 100vh;
    width: 100vw;
    transform: translate(100vw, 0);
    -ms-transform: translatex(-100vw);
    box-sizing: border-box;
    padding-top: 5%;
    transition: width 475ms ease-out, transform 450ms ease, border-radius .8s .1s ease;
    border-bottom-left-radius: 100vw;
  }
  @media (min-width: 768px) {
    .drawer-list {
      width: 40vw;
    }
  }
  
  input.hamburger {
    display: none;
  }
  input.hamburger:checked ~ .drawer-list {
    transform: translatex(0);
    border-bottom-left-radius: 0;
  }
  input.hamburger:checked ~ .drawer-list li {
    transform: translatex(0);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(1) {
    transition: transform 1s 0.08s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(2) {
    transition: transform 1s 0.16s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(3) {
    transition: transform 1s 0.24s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(4) {
    transition: transform 1s 0.32s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(5) {
    transition: transform 1s 0.4s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(6) {
    transition: transform 1s 0.48s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(7) {
    transition: transform 1s 0.56s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(8) {
    transition: transform 1s 0.64s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(9) {
    transition: transform 1s 0.72s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(10) {
    transition: transform 1s 0.8s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(11) {
    transition: transform 1s 0.88s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(12) {
    transition: transform 1s 0.96s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(13) {
    transition: transform 1s 1.04s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(14) {
    transition: transform 1s 1.12s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(15) {
    transition: transform 1s 1.2s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(16) {
    transition: transform 1s 1.28s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(17) {
    transition: transform 1s 1.36s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(18) {
    transition: transform 1s 1.44s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(19) {
    transition: transform 1s 1.52s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(20) {
    transition: transform 1s 1.6s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(21) {
    transition: transform 1s 1.68s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(22) {
    transition: transform 1s 1.76s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(23) {
    transition: transform 1s 1.84s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(24) {
    transition: transform 1s 1.92s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(25) {
    transition: transform 1s 2s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(26) {
    transition: transform 1s 2.08s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(27) {
    transition: transform 1s 2.16s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(28) {
    transition: transform 1s 2.24s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(29) {
    transition: transform 1s 2.32s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(30) {
    transition: transform 1s 2.4s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(31) {
    transition: transform 1s 2.48s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(32) {
    transition: transform 1s 2.56s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(33) {
    transition: transform 1s 2.64s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(34) {
    transition: transform 1s 2.72s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(35) {
    transition: transform 1s 2.8s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(36) {
    transition: transform 1s 2.88s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(37) {
    transition: transform 1s 2.96s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(38) {
    transition: transform 1s 3.04s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(39) {
    transition: transform 1s 3.12s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(40) {
    transition: transform 1s 3.2s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(41) {
    transition: transform 1s 3.28s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(42) {
    transition: transform 1s 3.36s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(43) {
    transition: transform 1s 3.44s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(44) {
    transition: transform 1s 3.52s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(45) {
    transition: transform 1s 3.6s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(46) {
    transition: transform 1s 3.68s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(47) {
    transition: transform 1s 3.76s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(48) {
    transition: transform 1s 3.84s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(49) {
    transition: transform 1s 3.92s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li:nth-child(50) {
    transition: transform 1s 4s cubic-bezier(0.29, 1.4, 0.44, 0.96);
  }
  input.hamburger:checked ~ .drawer-list li a {
    padding-right: 15px;
  }
  input.hamburger:checked ~ label > i {
    background-color: transparent;
    transform: rotate(90deg);
  }
  input.hamburger:checked ~ label > i:before {
    transform: translate(-50%, -50%) rotate(315deg);
  }
  input.hamburger:checked ~ label > i:after {
    transform: translate(-50%, -50%) rotate(-315deg);
  }
  input.hamburger:checked ~ label open {
    color: transparent;
    width: 0;
  }
  
  label.hamburger {
    z-index: 9999;
    position: relative;
    display: block;
    height: 50px;
    width: 50px;
  }
  label.hamburger:hover {
    cursor: pointer;
  }

  label.hamburger text open {
    color: #FEFEFE;
    width: 100%;
  }
  label.hamburger > i {
    position: absolute;
    width: 100%;
    height: 2px;
    top: 50%;
    background-color: #FEFEFE;
    pointer-events: auto;
    transition-duration: .35s;
    transition-delay: .35s;
  }
  label.hamburger > i:before, label.hamburger > i:after {
    position: absolute;
    display: block;
    width: 100%;
    height: 2px;
    left: 50%;
    background-color: #FEFEFE;
    content: "";
    transition: transform 0.35s;
    transform-origin: 50% 50%;
  }
  label.hamburger > i:before {
    transform: translate(-50%, -14px);
  }
  label.hamburger > i:after {
    transform: translate(-50%, 14px);
  }
  
  label.hamburger {
    width: 20px;
    height: 20px;;
  } 
  
/* - Addititional menu */

/* + News toggler */

.switchContainer {
  filter: url("index.html#gooey");
  -webkit-filter: url("#gooey");
  cursor: pointer; 
}

.switchBg {
  width: 60px;
  height: 7px;
}

.switchBtn {
  width: 30px;
  height: 30px;
  border-radius: 50%; 
  display: inline-block; 
  position: absolute; 
  left: 0px; 
  top: -12px; 
  transform: translate3d(0,0,0);
}

.switchBg, .switchBtn {
  background: #fff; 
  transition: 300ms all ease;
}

.switchContainer.switchOn .switchBtn {
  animation: switchOn 250ms linear forwards;
}

.switchContainer.switchOff .switchBtn {
  animation: switchOff 250ms linear forwards;
}

#toggle_svg {
  display: none;
}

@keyframes switchOn { 
  0% {
    transform: scale3d(1,1,1) translate3d(0px,0,0); 
    transform-origin: left center;
  } 
  40% {
    transform: scale3d(1.4,0.7,0) translate3d(20px,0,0);
    transform-origin: right center;
  }
  70% {
    transform: scale3d(0.9,1.15,1) translate3d(33px,0,0);
  }
  100% {
    transform: scale3d(1,1,1) translate3d(30px,0,0);
  }
}

@keyframes switchOff { 
  0% {
    transform: scale3d(1,1,1) translate3d(30px,0,0); 
    transform-origin: right center;
  } 
  40% {
    transform: scale3d(1.4,0.7,0) translate3d(10px,0,0);
    transform-origin: right center;
  }
  70% {
    transform: scale3d(0.9,1.15,1) translate3d(-3px,0,0);
  }
  100% {
    transform: scale3d(1,1,1) translate3d(0px,0,0);
  }
}

/* - News toggler */

/* spinners */
/* Define an animation behavior */
@keyframes spinner {
  to { transform: rotate(360deg); }
}
/* This is the class name given by the Font Awesome component when icon contains 'spinner' */
.fa-spinner {
  /* Apply 'spinner' keyframes looping once every second (1s)  */
  animation: spinner 1s linear infinite;
  animation-timing-function: cubic-bezier(.93, .21, .05, .94)
}

#spinner {
  /* TODO Брать из переменных bootstrap */
  color: #007bff
}